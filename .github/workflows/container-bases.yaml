name: Build Paks Containers

# This job generates build matrices using base images built two hours earlier

on:
  schedule:
    - cron: 0 3 * * *

  # On pull request we test updates to images
  pull_request: []
 
  # On push to main we build and deploy images
  push: 
    branches:
      - main

jobs:
  generate:
    name: Generate Build Matrix
    runs-on: ubuntu-latest
    outputs:
      dockerbuild_matrix: ${{ steps.dockerbuild.outputs.dockerbuild_matrix }}
      empty_matrix: ${{ steps.dockerbuild.outputs.dockerbuild_matrix_empty }}

    steps:
    # Using git in the container to diff means we explicitly need to checkout a branch
    # if we use the default of this action we get a detached HEAD state.
    - uses: actions/checkout@v2
      if: github.event_name == 'pull_request'
      with:
         fetch-depth: 0
         ref: ${{ github.event.pull_request.head.ref }}

    - uses: actions/checkout@v2
      if: github.event_name != 'pull_request'
      with:
         fetch-depth: 0

    - name: Generate Build Matrix
      uses: vsoch/uptodate@main
      id: dockerbuild
      with: 
        root: ./
        parser: dockerbuild
        flags: "--registry ghcr.io/syspack"

    - name: View and Check Build Matrix Result
      env:
        result: ${{ steps.dockerbuild.outputs.dockerbuild_matrix }}
      run: |
        echo ${result}
        if [[ "${result}" == "[]" ]]; then
          printf "The matrix is empty, will not trigger next workflow.\n"
        else
          printf "The matrix is not empty, and we should continue on to the next workflow.\n"
        fi

  build:
    needs:
      - generate
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        result: ${{ fromJson(needs.generate.outputs.dockerbuild_matrix) }}
    if: ${{ needs.generate.outputs.empty_matrix == 'false' }}

    name: "Build ${{ matrix.result.container_name }}"
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: GHCR Login
      if: (github.event_name != 'pull_request')
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Make Space For Build
      run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc

    - name: Tweak container name
      env:
        container: ${{ matrix.result.container_name }}
      run: |
          container_version=$(python -c "print('$container'.split('-')[-1])")
          container_name=ghcr.io/syspack/pakages-ubuntu-$container_version
          echo "container_name=$container_name" >> $GITHUB_ENV

    - name: Build Container
      id: builder
      env:
        container: ${{ env.container_name }}
        prefix: ${{ matrix.result.command_prefix }}
        filename: ${{ matrix.result.filename }}
      run: |
        basedir=$(dirname $filename)
        printf "Base directory is ${basedir}\n"
        printf "Container name is ${container}\n"
        # Get relative path to PWD and generate dashed name from it
        cd $basedir
        echo "${prefix} -t ${container} ."
        ${prefix} -t ${container} .
        echo ::set-output name=uri::${container}
        echo ::set-output name=dockerfile_dir::${basedir}

    - name: Deploy Container
      if: (github.event_name != 'pull_request')
      env:
        container: ${{ env.container_name }}
      run: |
        docker images
        printf "docker push ${container}\n"
        docker push ${container}
